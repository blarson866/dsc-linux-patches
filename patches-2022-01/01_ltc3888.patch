From 358007e984ef9415702c734087ecf3f895dc63e5 Mon Sep 17 00:00:00 2001
From: David Clear <dac2@pensando.io>
Date: Tue, 25 Jan 2022 10:24:03 -0800
Subject: [PATCH] drivers/hwmon: Adding support LTC3888

This patch adds support for the LTC3888 VRM on Ortano-ADI cards.
- Adding support for ltc3888 and ltc3888-1 driver
- Adding IOUT read for core and arm for ADI cards

Signed-off-by: David Clear <dac2@pensando.io>
---
 arch/arm64/configs/elba_defconfig |  1 +
 drivers/hwmon/pmbus/ltc2978.c     | 42 ++++++++++++++++++++++++++++++-
 2 files changed, 42 insertions(+), 1 deletion(-)

diff --git a/arch/arm64/configs/elba_defconfig b/arch/arm64/configs/elba_defconfig
index e349a80e214b..6aa5ea405e8d 100644
--- a/arch/arm64/configs/elba_defconfig
+++ b/arch/arm64/configs/elba_defconfig
@@ -194,6 +194,7 @@ CONFIG_GPIO_DWAPB=y
 CONFIG_GPIO_ELBA_SPICS=y
 CONFIG_SENSORS_LM90=y
 CONFIG_PMBUS=y
+CONFIG_SENSORS_LTC2978=y
 CONFIG_SENSORS_TPS53659=y
 CONFIG_THERMAL=y
 # CONFIG_THERMAL_OF is not set
diff --git a/drivers/hwmon/pmbus/ltc2978.c b/drivers/hwmon/pmbus/ltc2978.c
index 58b789c28b48..918840fa6638 100644
--- a/drivers/hwmon/pmbus/ltc2978.c
+++ b/drivers/hwmon/pmbus/ltc2978.c
@@ -28,7 +28,7 @@
 #include "pmbus.h"
 
 enum chips { ltc2974, ltc2975, ltc2977, ltc2978, ltc2980, ltc3880, ltc3882,
-	ltc3883, ltc3886, ltc3887, ltm2987, ltm4675, ltm4676 };
+	ltc3883, ltc3886, ltc3887, ltc3888, ltm2987, ltm4675, ltm4676 };
 
 /* Common for all chips */
 #define LTC2978_MFR_VOUT_PEAK		0xdd
@@ -51,6 +51,9 @@ enum chips { ltc2974, ltc2975, ltc2977, ltc2978, ltc2980, ltc3880, ltc3882,
 #define LTC3880_MFR_CLEAR_PEAKS		0xe3
 #define LTC3880_MFR_TEMPERATURE2_PEAK	0xf4
 
+/* LTC3888 only */
+#define LTC3888_MFR_TOTAL_IOUT		0xe1
+
 /* LTC3883 and LTC3886 only */
 #define LTC3883_MFR_IIN_PEAK		0xe1
 
@@ -75,6 +78,8 @@ enum chips { ltc2974, ltc2975, ltc2977, ltc2978, ltc2980, ltc3880, ltc3882,
 #define LTC3883_ID			0x4300
 #define LTC3886_ID			0x4600
 #define LTC3887_ID			0x4700
+#define LTC3888_ID			0x4800
+#define LTC3888_ID_D1			0x4880	/* Dash 1 */
 #define LTM2987_ID_A			0x8010	/* A/B for two die IDs */
 #define LTM2987_ID_B			0x8020
 #define LTM4675_ID			0x47a0
@@ -433,6 +438,25 @@ static int ltc3883_read_word_data(struct i2c_client *client, int page, int reg)
 	return ret;
 }
 
+static int ltc3888_read_word_data(struct i2c_client *client, int page, int reg)
+{
+	const struct pmbus_driver_info *info = pmbus_get_driver_info(client);
+	struct ltc2978_data *data = to_ltc2978_data(info);
+	int ret;
+
+	switch (reg) {
+	case PMBUS_VIRT_READ_IOUT_AVG:
+		ret = ltc_read_word_data(client, page,
+					 LTC3888_MFR_TOTAL_IOUT);
+		data->iout_max[page] = lin11_to_val(ret);
+		break;
+	default:
+		ret = ltc3880_read_word_data(client, page, reg);
+		break;
+	}
+	return ret;
+}
+
 static int ltc2978_clear_peaks(struct ltc2978_data *data,
 			       struct i2c_client *client, int page)
 {
@@ -509,6 +533,7 @@ static const struct i2c_device_id ltc2978_id[] = {
 	{"ltc3883", ltc3883},
 	{"ltc3886", ltc3886},
 	{"ltc3887", ltc3887},
+	{"ltc3888", ltc3888},
 	{"ltm2987", ltm2987},
 	{"ltm4675", ltm4675},
 	{"ltm4676", ltm4676},
@@ -581,6 +606,8 @@ static int ltc2978_get_id(struct i2c_client *client)
 		return ltc3886;
 	else if (chip_id == LTC3887_ID)
 		return ltc3887;
+	else if (chip_id == LTC3888_ID || chip_id == LTC3888_ID_D1)
+		return ltc3888;
 	else if (chip_id == LTM2987_ID_A || chip_id == LTM2987_ID_B)
 		return ltm2987;
 	else if (chip_id == LTM4675_ID)
@@ -698,6 +725,18 @@ static int ltc2978_probe(struct i2c_client *client,
 		  | PMBUS_HAVE_POUT
 		  | PMBUS_HAVE_TEMP | PMBUS_HAVE_STATUS_TEMP;
 		break;
+	case ltc3888:
+		data->features |= FEAT_CLEAR_PEAKS | FEAT_NEEDS_POLLING;
+		info->read_word_data = ltc3888_read_word_data;
+		info->pages = LTC3880_NUM_PAGES;
+		info->func[0] = PMBUS_HAVE_STATUS_VOUT | PMBUS_HAVE_STATUS_IOUT
+		  | PMBUS_HAVE_STATUS_INPUT | PMBUS_HAVE_STATUS_TEMP
+		  | PMBUS_HAVE_VIN | PMBUS_HAVE_VOUT | PMBUS_HAVE_IOUT
+		  | PMBUS_HAVE_TEMP | PMBUS_HAVE_TEMP2;
+		info->func[1] = PMBUS_HAVE_STATUS_VOUT | PMBUS_HAVE_STATUS_IOUT
+		  | PMBUS_HAVE_STATUS_TEMP | PMBUS_HAVE_VOUT | PMBUS_HAVE_IOUT
+		  | PMBUS_HAVE_TEMP;
+		break;
 	case ltc3882:
 		data->features |= FEAT_CLEAR_PEAKS | FEAT_NEEDS_POLLING;
 		info->read_word_data = ltc3880_read_word_data;
@@ -767,6 +806,7 @@ static const struct of_device_id ltc2978_of_match[] = {
 	{ .compatible = "lltc,ltc3883" },
 	{ .compatible = "lltc,ltc3886" },
 	{ .compatible = "lltc,ltc3887" },
+	{ .compatible = "lltc,ltc3888" },
 	{ .compatible = "lltc,ltm2987" },
 	{ .compatible = "lltc,ltm4675" },
 	{ .compatible = "lltc,ltm4676" },
-- 
2.17.1

