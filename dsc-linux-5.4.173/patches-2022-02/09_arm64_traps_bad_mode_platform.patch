From ae10b58abccfe27284ceb2f6c280f4f46c57c104 Mon Sep 17 00:00:00 2001
From: David Clear <dac2@pensando.io>
Date: Fri, 28 Jan 2022 19:49:42 -0800
Subject: [PATCH] arm64/traps: Call platform handler for bad_mode

When taking a bad_mode exception, give platform code an opportunity
to decide whether the error the event can be ignored or not.

Signed-off-by: David Clear <dac2@pensando.io>
---
 arch/arm64/include/asm/traps.h |  1 +
 arch/arm64/kernel/traps.c      | 13 +++++++++++--
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/arch/arm64/include/asm/traps.h b/arch/arm64/include/asm/traps.h
index 59690613ac31..091791dea808 100644
--- a/arch/arm64/include/asm/traps.h
+++ b/arch/arm64/include/asm/traps.h
@@ -29,6 +29,7 @@ void arm64_notify_segfault(unsigned long addr);
 void arm64_force_sig_fault(int signo, int code, void __user *addr, const char *str);
 void arm64_force_sig_mceerr(int code, void __user *addr, short lsb, const char *str);
 void arm64_force_sig_ptrace_errno_trap(int errno, void __user *addr, const char *str);
+int platform_bad_mode(struct pt_regs *regs, unsigned int esr);
 
 /*
  * Move regs->pc to next instruction and do necessary setup before it
diff --git a/arch/arm64/kernel/traps.c b/arch/arm64/kernel/traps.c
index 4e3e9d9c8151..4b0e02cb68e0 100644
--- a/arch/arm64/kernel/traps.c
+++ b/arch/arm64/kernel/traps.c
@@ -782,12 +782,21 @@ const char *esr_get_class_string(u32 esr)
 	return esr_class_str[ESR_ELx_EC(esr)];
 }
 
+int __weak platform_bad_mode(struct pt_regs *regs, unsigned int esr)
+{
+	return 0;
+}
+
 /*
- * bad_mode handles the impossible case in the exception vector. This is always
- * fatal.
+ * bad_mode handles the impossible case in the exception vector.
+ * This is usually fatal, but give the platform a chance to handle
+ * platform-specific errors.
  */
 asmlinkage void bad_mode(struct pt_regs *regs, int reason, unsigned int esr)
 {
+	if (platform_bad_mode(regs, esr))
+		return;
+
 	console_verbose();
 
 	pr_crit("Bad mode in %s handler detected on CPU%d, code 0x%08x -- %s\n",
-- 
2.17.1

